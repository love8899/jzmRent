@model Jzm.Rent.WebApp45.Models.Borrow

@{
    ViewBag.Title = "View1";
    Layout = "~/Views/Shared/_LayoutJzm.cshtml";
}

<h2>Return Device</h2>
<p>
    @Html.ActionLink("(Back to List)", "ShowBorrowDevice")
</p>

@using (Html.BeginForm("ReturnDevice","BorrowList"))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)

    <div class="row">


        <div class="col-sm-4">
            @Html.LabelFor(model => model.DeviceUID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeviceUID, new { htmlAttributes = new { @class = "form-control",  @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.DeviceUID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-sm-4">
            @Html.LabelFor(model => model.DeviceName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeviceName, new { htmlAttributes = new { @class = "form-control" , disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.DeviceName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-sm-4">
            @Html.LabelFor(model => model.BorrowDateOnUtc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BorrowDateOnUtc, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.BorrowDateOnUtc, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>


    <div class="row">
        <div class="col-sm-4">

            <div class="col-md-10">
                @Html.DisplayNameFor(model => model.UserLastName)
            </div>
            <div>
                @Html.EditorFor(model => model.UserLastName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.UserLastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-sm-4">
            @Html.LabelFor(model => model.UserFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserFirstName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.UserFirstName, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="col-sm-4">
            @Html.LabelFor(model => model.BorrowDays, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BorrowDays, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.BorrowDays, "", new { @class = "text-danger" })
            </div>
        </div>







    </div>

       

    <div class="row">

        <div class="col-sm-4">
            @Html.LabelFor(model => model.ReturnDateOnUtc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="date" name="ReturnDateOnUtc" calss="form-control" placeholder="MM/DD/YYY"required />
            </div>
        </div>

        <div class="col-sm-4">
        @Html.LabelFor(model => model.ReturnQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ReturnQuantity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ReturnQuantity, "", new { @class = "text-danger" })
        </div>
    </div>
        




        <div class="col-sm-4">
            @Html.LabelFor(model => model.BorrowQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BorrowQuantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BorrowQuantity, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>
    
    <div class="col-sm-4">
        @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
        </div>
    </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-primary" />
            </div>
        </div>
    </div>
    }


